@model IPTSEOnlineExam.BLL.Models.Questions
<!DOCTYPE html>

@{
    Layout = null;
}


<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Intellectual Property Talent Search Examination</title>

    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <script src="~/Scripts/modernizr-2.6.2.js"></script>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" rel="stylesheet" />
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
    <link rel="stylesheet" href="https://formden.com/static/cdn/bootstrap-iso.css" />
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/js/bootstrap-datepicker.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css" />
    <style>
        .formcontrol1 {
            width: 100%;
            padding: 6px 12px;
            font-size: 14px;
            line-height: 1.42857143;
            color: #555;
            background-color: #fff;
            background-image: none;
            border: 1px solid #ccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
            -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
            transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        }
    </style>
    @{
        var val = Json.Encode(Model);
    }

    <script>


        function enableNext() {
            var nextBtn = document.getElementById('NEXT');
            nextBtn.disabled = false;
            var skipBtn = document.getElementById('SKIP');
            skipBtn.disabled = true;
        }
        $(document).ready(function () {
            $("#SKIP").click(function () {
                $("#BACK").attr('disabled', 'disabled');
            });
        });
        function NextQuestion() {
            var totalTimeOut = document.getElementById('clockdiv').innerHTML;
            $('#hdnTotalTime').val(totalTimeOut);
            var totalTimeOut = document.getElementById('countdown').innerHTML;
            $('#hdnSkipId').val(totalTimeOut);
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "NextQuestion",
                    data: $('#mockForm').serialize(),
                    success: function (response) {
                        if (response.success) {
                            if (response.responseText == "Exam Complete!")
                            {
                                window.location.href = "../Result/ResultPage";
                            }
                        }
                    },
                });
           // window.location.reload();
          //  return false;
        }
        function enableBack() {
            //var backBtn = document.getElementById('BACK');
            // backBtn.disabled = false;
            var p = $('#hdnQId').val();
            var skip = 'True';
            var totalTimeOut = document.getElementById('countdown').innerHTML;
            $('#hdnSkipId').val(totalTimeOut);
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "SkipQuestion",
                    data: $('#mockForm').serialize(),
                });
            // window.location.reload();
           // return false;
        }
        function enableSkip() {
            //var backBtn = document.getElementById('BACK');
            //backBtn.disabled = false;
            var p = $('#hdnQId').val();
            var skip = 'True';
            var totalTimeOut = document.getElementById('countdown').innerHTML;
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "PrevQuestion",
                    data: $('#mockForm').serialize(),
                });
            window.location.reload();
            return false;
        }
    </script>
</head>
<body>
    <form id="mockForm">
        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header navbar-right ">
                    <img src="~/Images/logo.png" height="50" width="50" />
                    <div class="navbar-brand">Intellectual Property Talent Search Examination</div>
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav"></ul>
                </div>
            </div>
        </div>
        <p>
            <div id="clockdiv" style="float:right; color:blue; font-size:small;" runat="server"></div><br />
            <div id="countdown" style="float:right; color:blue; font-size:small;" runat="server">
            </div>
        </p>
        <br />
        <div class="container body-content">
            @Html.AntiForgeryToken()
            <div>
                <dl class="dl-horizontal">
                    <dt>
                        (@ViewBag.questionNo)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.QuestionText)
                    </dd>
                    @if (Model.questionsChoice != null)
                    {
                        foreach (var item in Model.questionsChoice)
                        {
                            <dt>
                                @Html.RadioButtonFor(modelItem => modelItem.selectedvalue, item.Id, new { id = "A" + item.Id, onclick = "enableNext()" })
                            </dt>
                            <dd>
                                @Html.DisplayFor(modelItem => item.ChoiceText)
                            </dd>
                            @Html.HiddenFor(modelItem => item.IsAnswer, new { id = "isAnswer" })
                        }
                    }
                    @Html.HiddenFor(m => m.Id, new { id = "hdnQId" })
                    @Html.HiddenFor(m => m.QuestionText)
                    @Html.HiddenFor(m => m.TestId)
                    @Html.HiddenFor(m => m.skippedTime, new { id = "hdnSkipId" })
                    @Html.HiddenFor(m => m.TotalTime, new { id = "hdnTotalTime" })
                    @Html.HiddenFor(m => m.SpendTime, new { id = "hdnSpendTime" })
                    @Html.HiddenFor(m => m.remainingTime, new { id = "hdnremainingTime" })
                </dl>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">

                        <input id="BACK" type="submit" value="BACK" class="btn btn-danger" onclick="return enableSkip();" @(ViewBag.isSkip == false ? "disabled='disabled'" : "") />
                        <input id="SKIP" type="submit" value="SKIP" class="btn btn-danger" onclick="enableBack();" />
                        <input id="NEXT" disabled="disabled" type="submit" value="NEXT" class="btn btn-danger" onclick="NextQuestion();" />
                    </div>
                </div>
                <hr />

            </div>
        </div>
        <div class="navbar navbar-inverse navbar-fixed-bottom">
            <div class="container">
                <div class="navbar-right navbar-brand">
                    <a href="http://www.martancy.com/" target="_blank">Site Powered by Martancy </a>
                </div>
            </div>
        </div>
        <script src="~/Scripts/jquery-1.10.2.min.js"></script>
        <script src="~/Scripts/bootstrap.min.js"></script>
        <script>
         // 10 minutes from now
            var res = $('#hdnTotalTime').val().split(":");
            var time_in_minutes = 10;//parseInt(res[0]);
           // var time_in_seconds = parseInt(res[1]);
            var current_time = Date.parse(new Date());
         var deadline = new Date(current_time + time_in_minutes * 60 * 1000);

         function time_remaining(endtime) {
             var t = Date.parse(endtime) - Date.parse(new Date());
             var seconds = Math.floor((t / 1000) % 60);
             var minutes = Math.floor((t / 1000 / 60) % 60);
             var hours = Math.floor((t / (1000 * 60 * 60)) % 24);
             var days = Math.floor(t / (1000 * 60 * 60 * 24));
             return { 'total': t, 'days': days, 'hours': hours, 'minutes': minutes, 'seconds': seconds };
         }
         function run_clock(id, endtime) {
             var clock = document.getElementById(id);
             function update_clock() {
                 var t = time_remaining(endtime);
                 if (t.seconds.toString().length == 1) {
                     clock.innerHTML = "Total ExamTime :- " + t.minutes + ': 0' + t.seconds;
                 }
                 else {
                     clock.innerHTML = "Total ExamTime :- " + t.minutes + ': ' + t.seconds;
                 }
                 if (t.total <= 0) { clearInterval(timeinterval); }
             }
             update_clock(); // run function once at first to avoid delay
             var timeinterval = setInterval(update_clock, 1000);
         }
            run_clock('clockdiv', deadline);

         var timer;
       // var d = 60;
        var remTime = $('#hdnremainingTime').val();
        var d = remTime;
        var _second = 1000;
        var _minute = _second * 60;
        var _hour = _minute * 60;
        var _day = _hour * 24;
        var end = new Date().getTime() + (60 * _second);
        var List = @Html.Raw(Json.Encode(Model));
            function showRemaining() {

                var now = new Date();
                var distance = end - now;
                if (distance < 15) {
                    // document.getElementById('clock').style.color = "red";
                    document.getElementById('countdown').style.color = "red";
                }

                if (d < 0) {

                    clearInterval(timer);
                    var p = $('#hdnQId').val();
                    var timeOut = 'True';
                    var totalTimeOut = document.getElementById('countdown').innerHTML;
                    $.ajax(
                        {
                            type: "POST", //HTTP POST Method
                            url: "NextQuestionTimeOut",
                            data: $('#mockForm').serialize(),
                            success: function (response) {
                                if (response.success) {
                                    if (response.responseText == "Exam Complete!") {
                                        window.location.href = "../Result/ResultPage";
                                    }
                                }
                            },
                        });
                    window.location.reload();
                    return false;
                }
                var days = Math.floor(distance / _day);
                var hours = Math.floor((distance % _day) / _hour);
                var minutes = Math.floor((distance % _hour) / _minute);
                var seconds = Math.floor((distance % _minute) / _second);
                document.getElementById('countdown').innerHTML = ' Remaining Time :- ' + minutes + ':';
                if (d.toString().length == 1) {
                    document.getElementById('countdown').innerHTML += '0'+d--;
                }
                else {
                    document.getElementById('countdown').innerHTML += d--;
                }
            }

            timer = setInterval(showRemaining, 1000);
        </script>
    </form>
</body>
</html>