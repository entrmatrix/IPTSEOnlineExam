@model IPTSEOnlineExam.BLL.Models.Questions
@{
    Layout = "~/Views/Shared/_FinalExamLayout.cshtml";
}
<script>


    function enableNext() {
        var nextBtn = document.getElementById('NEXT');
        nextBtn.disabled = false;
        var skipBtn = document.getElementById('SKIP');
        skipBtn.disabled = true;
    }
    $(document).ready(function () {
        $("#SKIP").click(function () {
            $("#BACK").attr('disabled', 'disabled');
        });
    });
    //function NextQuestion() {
    //    var totalTimeOut = document.getElementById('clockdiv').innerHTML;
    //    $('#hdnTotalTime').val(totalTimeOut);
    //    var totalTimeOut = document.getElementById('countdown').innerHTML;
    //    $('#hdnSkipId').val(totalTimeOut);
    //    $.ajax(
    //        {
    //            type: "POST", //HTTP POST Method
    //            url: "NextQuestion",
    //            data: $('#mockForm').serialize(),
    //            dataType: 'json',
    //            crossDomain: true,
    //            success: function (response) {
    //                alert(response);
    //                if (response.success) {
    //                    if (response.responseText == "Exam Complete!") {
    //                        window.location.href = "../Result/ResultPage";
    //                    }
    //                }
    //            },
    //        });
    //    //window.location.reload();
    //  //  return false;
    //}

    function setvalue(isSkip, isPrev) {
        var totalTimeOut = document.getElementById('clockdiv').innerHTML;
        $('#hdnTotalTime').val(totalTimeOut);
        var totalTimeOut = document.getElementById('countdown').innerHTML;
        $('#hdnSkipId').val(totalTimeOut);
        $('#hdnSkipQuestion').val(isSkip);
        $('#hdnPrevQuestion').val(isPrev);
    }
    //function enableBack() {
    //    var totalTimeOut = document.getElementById('clockdiv').innerHTML;
    //    $('#hdnTotalTime').val(totalTimeOut);
    //    var totalskipOut = document.getElementById('countdown').innerHTML;
    //    $('#hdnSkipId').val(totalTimeOut);
    //    var QuestId = $('#hdnQId').val();
    //    var skip = 'True';
    //    $.ajax(
    //        {
    //            type: "POST", //HTTP POST Method
    //            url: "SkipQuestion",
    //            data: 'QuestId= ' + QuestId + ',TotalTime=' + totalTimeOut + ',skippedTime=' + totalskipOut//$('#mockForm').serialize(),
    //        });
    //    window.location.reload();
    //    return false;
    //}
    //function enableSkip() {
    //    var totalTimeOut = document.getElementById('clockdiv').innerHTML;
    //    $('#hdnTotalTime').val(totalTimeOut);
    //    var totalskipTime = document.getElementById('countdown').innerHTML;
    //    $('#hdnSkipId').val(totalTimeOut);
    //    var p = $('#hdnQId').val();
    //    var skip = 'True';
    //    var totalTimeOut = document.getElementById('countdown').innerHTML;
    //    $.ajax(
    //        {
    //            type: "POST", //HTTP POST Method
    //            url: "PrevQuestion",
    //            data: 'QuestId= ' + p + ',TotalTime=' + totalTimeOut + ',skippedTime=' + totalskipTime
    //        });
    //    //window.location.reload();
    //    //  return false;
    //}
</script>


<p>
    <div id="clockdiv" style="float:right; color:blue; font-size:small; display:none;" runat="server"></div><br />
    <div id="countdown" style="float:right; color:blue; font-size:small;padding-right: 64px;" runat="server">
    </div>
</p>
<br />
<div class="container body-content">
    @using (Html.BeginForm("NextQuestion", "School", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div style="overflow-x:hidden;">
            <table>
                <tr><td colspan="2">(@ViewBag.questionNo) &nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.QuestionText)</td></tr>

                @Html.HiddenFor(m => m.Id, new { id = "hdnQId" })
                @Html.HiddenFor(m => m.QuestionText)
                @Html.HiddenFor(m => m.TestId)
                @Html.HiddenFor(m => m.skippedTime, new { id = "hdnSkipId" })
                @Html.HiddenFor(m => m.TotalTime, new { id = "hdnTotalTime" })
                @Html.HiddenFor(m => m.SpendTime, new { id = "hdnSpendTime" })
                @Html.HiddenFor(m => m.remainingTime, new { id = "hdnremainingTime" })
                @Html.HiddenFor(m => m.IsskipQuestions, new { id = "hdnSkipQuestion" })
                @Html.HiddenFor(m => m.prevQuestions, new { id = "hdnPrevQuestion" })
                @if (Model.questionsChoice != null)
                {
                    foreach (var item in Model.questionsChoice)
                    {
                        <tr>
                            <td></td>
                            <td>
                                @Html.RadioButtonFor(modelItem => modelItem.selectedvalue, item.Id, new { id = "A" + item.Id, onclick = "enableNext()" })
                                &nbsp;&nbsp;&nbsp;@Html.DisplayFor(modelItem => item.ChoiceText)
                            </td>
                        </tr>
                        @Html.HiddenFor(modelItem => item.IsAnswer, new { id = "isAnswer" })

                    }
                }

            </table>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="BACK" type="submit" value="BACK" class="btn btn-danger" onclick="setvalue(false,true);" @(ViewBag.isSkip == false ? "disabled='disabled'" : "") />
                    <input id="SKIP" type="submit" value="SKIP" class="btn btn-danger" onclick="setvalue(true,false);" />
                    <input id="NEXT" disabled="disabled" type="submit" value="NEXT" class="btn btn-danger" onclick="setvalue(false,false);" />
                </div>
            </div>

        </div>

    }
    <script>

             var timer;
        var url = $(location).attr('host');
        var protocol = $(location).attr('protocol');
            // var d = 60;
		var remTime;
        remTime = $('#hdnremainingTime').val();
        var d;
        if (typeof remTime !== "undefined") {
            d = remTime;
        }
        else {
            d = 60;
        }
            var _second = 1000;
            var _minute = _second * 60;
            var _hour = _minute * 60;
            var _day = _hour * 24;
            var end = new Date().getTime() + (60 * _second);
            var List = @Html.Raw(Json.Encode(Model));
            function showRemaining() {

                var now = new Date();
                var distance = end - now;
                if (distance < 15) {
                    // document.getElementById('clock').style.color = "red";
                    document.getElementById('countdown').style.color = "red";
                }

                if (d < 0) {
                    clearInterval(timer);
                    var pId = $('#hdnQId').val();
                    var totalTimeOut = document.getElementById('clockdiv').innerHTML;
                    $('#hdnTotalTime').val(totalTimeOut);
                    var totalTimeOutskip = document.getElementById('countdown').innerHTML;
                    $('#hdnSkipId').val(totalTimeOut);
                    var timeOut = 'True';
                    $.post(protocol + "//" + url + "/School/NextQuestionTimeOut", {
                        "QuestId": pId,
                        "TotalTime": totalTimeOut,
                        "skippedTime": totalTimeOutskip,
                    }, function (data) {
                        //$.ajax(
                        //        {
                        //            type: "POST",
                        //            URL: "NextQuestionTimeOut",
                        //            data: JSON.stringify({
                        //    "QuestId": pId,
                        //    "TotalTime": totalTimeOut,
                        //    "skippedTime": totalTimeOutskip,
                        //})
                        //});
                        window.location.reload();
                        return false;
                    });
                }
                var days = Math.floor(distance / _day);
                var hours = Math.floor((distance % _day) / _hour);
                var minutes = Math.floor((distance % _hour) / _minute);
                var seconds = Math.floor((distance % _minute) / _second);
                document.getElementById('countdown').innerHTML = ' Remaining Time :- ' + minutes + ':';

                    if (d.toString().length == 1) {
                        document.getElementById('countdown').innerHTML += '0' + d--;
                    }
                    else {
                        document.getElementById('countdown').innerHTML += d--;
                    }

            }
            timer = setInterval(showRemaining, 1000);
    </script>


</div>

